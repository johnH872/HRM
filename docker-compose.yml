version: '3.4'

services:
  # Angular web
  web:
    image: nginx:1.17-alpine
    ports:
      - 80:80 #ngix default porst is 80
      - 443:443 
    restart: unless-stopped
    # build:
    #   context: ./
    #   dockerfile: Dockerfile.ui
    volumes:
      - ./FrontEnd/.docker/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./FrontEnd/dist/front-end:/usr/share/nginx/html
      # - ./FrontEnd/nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/live/lhhrm.xyz/fullchain.pem:/etc/nginx/ssl/live/lhhrm.xyz/fullchain.pem
      - ./certbot/conf/live/lhhrm.xyz/privkey.pem:/etc/nginx/ssl/live/lhhrm.xyz/privkey.pem 
    links:
      - server
    depends_on:
      - db
  
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  # Express
  server:
    image: server
    ports:
      - "5000:5000"
    restart: unless-stopped 
    # volumes:
    #   - ./BackEnd/node_modules:/usr/src/app/node_modules
    depends_on:
      - db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  #MySQL Service
  db:
    image: mysql:8.0.31
    restart: unless-stopped
    # expose: 
    #   - "3306"
    ports:
      - "3306:3306"  
    command: --lower_case_table_names=1
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      # - .docker/data/db:/var/lib/mysql/
      - ./mysql-dump:/docker-entrypoint-initdb.d

  # Redis
  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - ./.docker/data/redis:/data
